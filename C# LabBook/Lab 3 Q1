using System;

namespace Lab3_Q1
{
    class InvalidMarksLimit : Exception
    {
        public InvalidMarksLimit(string message) : base(message)
        {

        }
    }

    class Participants
    {
        private string _empID;
        private string _name;
        private static string _companyName;
        private int _foundationMarks;
        private int _webBasicMarks;
        private int _dotNetMarks;
        private int _totalMarks;
        private int _obtainedMarks;
        private double _percentage;

        public string EmpID
        {
            set
            {
                _empID = value;
            }
            get
            {
                return _empID;
            }
        }
        public string Name
        {
            set
            {
                _name = value;
            }
            get
            {
                return _name;
            }
        }
        public static string CompanyName
        {
            set
            {
                _companyName = value;
            }
            get
            {
                return _companyName;
            }
        }
        public int FoundationMarks
        {
            set
            {
                if((value <= 100) && (value >= 0))
                {
                    _foundationMarks = value;
                }
                else
                {
                    throw new InvalidMarksLimit("Marks should be between 0 and 100");

                }
            }
            get
            {
                return _foundationMarks;
            }
        }
        public int WebBasicMarks
        {
            set
            {
                if ((value <= 100) && (value >= 0))
                {
                    _webBasicMarks = value;
                }
                else
                {
                    throw new InvalidMarksLimit("Marks should be between 0 and 100");

                }
            }
            get
            {
                return _webBasicMarks;
            }
        }
        public int DotNetMarks
        {
            set
            {
                if ((value <= 100) && (value >= 0))
                {
                    _dotNetMarks = value;
                }
                else
                {
                    throw new InvalidMarksLimit("Marks should be between 0 and 100");

                }
            }
            get
            {
                return _dotNetMarks;
            }
        }
        public int TotalMarks
        {
            set
            {
                _totalMarks = value;
            }
            get
            {
                return _totalMarks;
            }
        }
        public int ObtainedMarks
        {
            set
            {
                _obtainedMarks = value;
            }
            get
            {
                return _obtainedMarks;
            }
        }
        
        public Participants()
        {
            TotalMarks = 300;
        }

        public Participants(int totalMarks)
        {
            TotalMarks = 300;
        }

        static Participants()
        {
            CompanyName = "Corporate University";
        }

        public int CalcTotalMarksObtained(int marks1, int marks2, int marks3)
        {
            
            return (DotNetMarks + FoundationMarks + WebBasicMarks);
        }

        public double CalcPercentage(int marks, int total)
        {
            return ((marks*100)/total);
        }
    }

    class Program
    {
        static void Main()
        {
            try
            {
                Participants participants = new Participants();
                Console.WriteLine("Enter participant's Details");

                Console.WriteLine("Enter ID:");
                participants.EmpID = Console.ReadLine();

                Console.WriteLine("Enter Name:");
                participants.Name = Console.ReadLine();

                Console.WriteLine("Enter Dot Net Marks:");
                participants.DotNetMarks = int.Parse(Console.ReadLine());

                Console.WriteLine("Enter foundation Marks:");
                participants.FoundationMarks = int.Parse(Console.ReadLine());

                Console.WriteLine("Enter Web Basic Marks:");
                participants.WebBasicMarks = int.Parse(Console.ReadLine());

                Console.WriteLine("Emp Name:" + participants.Name);
                int storeIntermediate = participants.CalcTotalMarksObtained(participants.DotNetMarks, participants.FoundationMarks, participants.WebBasicMarks);
                //Console.WriteLine(storeIntermediate);
                Console.WriteLine("Percentage obtained : " + participants.CalcPercentage(storeIntermediate, participants.TotalMarks));
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }       
    }
}
